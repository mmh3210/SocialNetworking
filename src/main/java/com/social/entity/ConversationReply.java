package com.social.entity;
// Generated Apr 24, 2017 9:29:38 AM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ConversationReply generated by hbm2java
 */
@Entity
@Table(name="conversation_reply"
    ,catalog="socialsite"
)
public class ConversationReply  implements java.io.Serializable {


     private Long conversationReplyId;
     private Conversation conversation;
     private Users usersByUserIdFrom;
     private Users usersByUserIdTo;
     private String replyText;
     private String ip;
     private Date time;
     private int status;

    public ConversationReply() {
    }

    public ConversationReply(Conversation conversation, Users usersByUserIdFrom, Users usersByUserIdTo, String replyText, String ip, Date time, int status) {
       this.conversation = conversation;
       this.usersByUserIdFrom = usersByUserIdFrom;
       this.usersByUserIdTo = usersByUserIdTo;
       this.replyText = replyText;
       this.ip = ip;
       this.time = time;
       this.status = status;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="conversation_reply_id", unique=true, nullable=false)
    public Long getConversationReplyId() {
        return this.conversationReplyId;
    }
    
    public void setConversationReplyId(Long conversationReplyId) {
        this.conversationReplyId = conversationReplyId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="conversation_id", nullable=false)
    public Conversation getConversation() {
        return this.conversation;
    }
    
    public void setConversation(Conversation conversation) {
        this.conversation = conversation;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_id_from", nullable=false)
    public Users getUsersByUserIdFrom() {
        return this.usersByUserIdFrom;
    }
    
    public void setUsersByUserIdFrom(Users usersByUserIdFrom) {
        this.usersByUserIdFrom = usersByUserIdFrom;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_id_to", nullable=false)
    public Users getUsersByUserIdTo() {
        return this.usersByUserIdTo;
    }
    
    public void setUsersByUserIdTo(Users usersByUserIdTo) {
        this.usersByUserIdTo = usersByUserIdTo;
    }

    
    @Column(name="reply_text", nullable=false)
    public String getReplyText() {
        return this.replyText;
    }
    
    public void setReplyText(String replyText) {
        this.replyText = replyText;
    }

    
    @Column(name="ip", nullable=false, length=15)
    public String getIp() {
        return this.ip;
    }
    
    public void setIp(String ip) {
        this.ip = ip;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="time", nullable=false, length=19)
    public Date getTime() {
        return this.time;
    }
    
    public void setTime(Date time) {
        this.time = time;
    }

    
    @Column(name="status", nullable=false)
    public int getStatus() {
        return this.status;
    }
    
    public void setStatus(int status) {
        this.status = status;
    }




}


